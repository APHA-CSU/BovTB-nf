version: 2.1

commands:
  # Run tests under BovTB-nf/tests/jobs/ and store artifacts
  run-test:
    parameters:
      script:
        description: This test calls 'bash -e tests/jobs/<< script >>'
        type: string

    steps:
      - run: |
          cd /BovTB-nf/
          mkdir /reads/ /results/ /artifacts/
          bash -e tests/jobs/<< parameters.script >>

      - store_artifacts:
          path: /artifacts/

# Run tests under BovTB-nf/tests/jobs/ and store artifacts
jobs:
  # Docker image containing the nextflow pipeline
  build:
    docker:
      # Circleci base ubuntu image
      - image: cimg/base:2020.01

    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=$CIRCLE_BRANCH
          docker build -t aaronsfishman/bov-tb:$TAG -f ./docker/Dockerfile .
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker push aaronsfishman/bov-tb:$TAG

  tinyreads:
    executor: nf-pipeline
    steps:
      - run-test:
          script: "tinyreads.bash"

  quality:
    executor: nf-pipeline
    parameters:
      case:
        type: string
    steps:
      - run-test:
          script: "quality.bash << parameters.case >>"

  lod:
    executor: nf-pipeline
    parameters:
      case:
        type: string
    steps:
      - run-test:
          script: "lod.bash << parameters.case >>"

  inclusivity:
    executor: nf-pipeline
    parameters:
      case:
        type: string
    steps:
      - run-test:
          script: "inclusivity.bash << parameters.case >>"

# Run a job on the current branch's Dockerfile
executors:
  nf-pipeline:
    docker:
      - image: "aaronsfishman/bov-tb:$CIRCLE_BRANCH"

# Orchestrates the validation testsÂ 
workflows:
  validation:
    jobs:
      - build

      - tinyreads:
          requires:
            - build
            
      - quality:
          requires:
            - tinyreads
          matrix:
            parameters:
              case: ["low", "adequate"]

      - lod:
          requires:
            - tinyreads
          matrix:
            parameters:
              case: ["0", "1", "2", "3"]

      - inclusivity:
          requires:
            - tinyreads
          matrix:
            parameters:
              case: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"]

      - inclusivity:
          requires:
            - tinyreads
          matrix:
            parameters:
              case: ["100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "186", "187"]
